#!/usr/bin/env php
<?php

foreach ([__DIR__ . '/../../autoload.php', __DIR__ . '/../vendor/autoload.php'] as $file) {
    if (file_exists($file)) {
        require $file;
        break;
    }
}

// argv and argc from phar
$argv = $argv ?? $_SERVER['argv'];
$argc = $argc ?? $_SERVER['argc'];

ini_set('xdebug.max_nesting_level', 3000);
// Disable Xdebug var_dump() output truncation
ini_set('xdebug.var_display_max_children', -1);
ini_set('xdebug.var_display_max_data', -1);
ini_set('xdebug.var_display_max_depth', -1);

// get file from command line argument
if ($argc !== 2) {
    fwrite(STDERR, 'Usage: ' . $argv[0] . ' <file>' . PHP_EOL);
    exit(1);
}
$file = $argv[1];

// Get JSON from file or stdin
$json = $file;
if (file_exists($file) && is_readable($file)) {
    $json = file_get_contents($file);
}

if (empty($json)) {
    fwrite(STDERR, 'Error: Empty input' . PHP_EOL);
    exit(1);
}

$jsonDecoder = new PhpParser\JsonDecoder();
$ast = $jsonDecoder->decode($json);

if (null === $ast) {
    fwrite(STDERR, 'Error: Failed to decode JSON' . PHP_EOL);
    exit(1);
}

// convert to PHP
$prettyPrinter = new PhpParser\PrettyPrinter\Standard;
echo $prettyPrinter->prettyPrintFile($ast);